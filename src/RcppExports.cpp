// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// pcor
arma::mat pcor(const arma::mat& x);
RcppExport SEXP _ConAn_pcor(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(pcor(x));
    return rcpp_result_gen;
END_RCPP
}
// erase_mods
arma::mat erase_mods(arma::mat x, const NumericVector& ix);
RcppExport SEXP _ConAn_erase_mods(SEXP xSEXP, SEXP ixSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type ix(ixSEXP);
    rcpp_result_gen = Rcpp::wrap(erase_mods(x, ix));
    return rcpp_result_gen;
END_RCPP
}
// atanh_lower_tri
NumericVector atanh_lower_tri(const arma::mat& x);
RcppExport SEXP _ConAn_atanh_lower_tri(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(atanh_lower_tri(x));
    return rcpp_result_gen;
END_RCPP
}
// atanh_lower_tri_pcor
NumericVector atanh_lower_tri_pcor(const arma::mat& x);
RcppExport SEXP _ConAn_atanh_lower_tri_pcor(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(atanh_lower_tri_pcor(x));
    return rcpp_result_gen;
END_RCPP
}
// atanh_lower_tri_erase_mods_pcor
NumericVector atanh_lower_tri_erase_mods_pcor(const arma::mat& x, const NumericVector& ix);
RcppExport SEXP _ConAn_atanh_lower_tri_erase_mods_pcor(SEXP xSEXP, SEXP ixSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type ix(ixSEXP);
    rcpp_result_gen = Rcpp::wrap(atanh_lower_tri_erase_mods_pcor(x, ix));
    return rcpp_result_gen;
END_RCPP
}
// mean_atanh_lower_tri_erase_mods_pcor
double mean_atanh_lower_tri_erase_mods_pcor(const arma::mat& x, const NumericVector& ix);
RcppExport SEXP _ConAn_mean_atanh_lower_tri_erase_mods_pcor(SEXP xSEXP, SEXP ixSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type ix(ixSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_atanh_lower_tri_erase_mods_pcor(x, ix));
    return rcpp_result_gen;
END_RCPP
}
// bg_corrected_atanh_lower_tri_pcor
NumericVector bg_corrected_atanh_lower_tri_pcor(const arma::mat& x, const double& bg);
RcppExport SEXP _ConAn_bg_corrected_atanh_lower_tri_pcor(SEXP xSEXP, SEXP bgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const double& >::type bg(bgSEXP);
    rcpp_result_gen = Rcpp::wrap(bg_corrected_atanh_lower_tri_pcor(x, bg));
    return rcpp_result_gen;
END_RCPP
}
// mean_bg_corrected_atanh_lower_tri_pcor
double mean_bg_corrected_atanh_lower_tri_pcor(const arma::mat& x, const double& bg);
RcppExport SEXP _ConAn_mean_bg_corrected_atanh_lower_tri_pcor(SEXP xSEXP, SEXP bgSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const double& >::type bg(bgSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_bg_corrected_atanh_lower_tri_pcor(x, bg));
    return rcpp_result_gen;
END_RCPP
}
// modular_differential_connectivity
double modular_differential_connectivity(const arma::mat& xr, const arma::mat& xt, const double& bgr, const double& bgt, const int& type);
RcppExport SEXP _ConAn_modular_differential_connectivity(SEXP xrSEXP, SEXP xtSEXP, SEXP bgrSEXP, SEXP bgtSEXP, SEXP typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type xr(xrSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type xt(xtSEXP);
    Rcpp::traits::input_parameter< const double& >::type bgr(bgrSEXP);
    Rcpp::traits::input_parameter< const double& >::type bgt(bgtSEXP);
    Rcpp::traits::input_parameter< const int& >::type type(typeSEXP);
    rcpp_result_gen = Rcpp::wrap(modular_differential_connectivity(xr, xt, bgr, bgt, type));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ConAn_pcor", (DL_FUNC) &_ConAn_pcor, 1},
    {"_ConAn_erase_mods", (DL_FUNC) &_ConAn_erase_mods, 2},
    {"_ConAn_atanh_lower_tri", (DL_FUNC) &_ConAn_atanh_lower_tri, 1},
    {"_ConAn_atanh_lower_tri_pcor", (DL_FUNC) &_ConAn_atanh_lower_tri_pcor, 1},
    {"_ConAn_atanh_lower_tri_erase_mods_pcor", (DL_FUNC) &_ConAn_atanh_lower_tri_erase_mods_pcor, 2},
    {"_ConAn_mean_atanh_lower_tri_erase_mods_pcor", (DL_FUNC) &_ConAn_mean_atanh_lower_tri_erase_mods_pcor, 2},
    {"_ConAn_bg_corrected_atanh_lower_tri_pcor", (DL_FUNC) &_ConAn_bg_corrected_atanh_lower_tri_pcor, 2},
    {"_ConAn_mean_bg_corrected_atanh_lower_tri_pcor", (DL_FUNC) &_ConAn_mean_bg_corrected_atanh_lower_tri_pcor, 2},
    {"_ConAn_modular_differential_connectivity", (DL_FUNC) &_ConAn_modular_differential_connectivity, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_ConAn(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
